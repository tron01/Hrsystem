server:
  port: 0 # Dynamic port for multi-instance or Docker

spring:
  application:
    name: application-submit-service
  threads:
    virtual:
      enabled: true
  servlet:
    multipart:
      enabled: true
      max-file-size: 5MB
      max-request-size: 5MB
  kafka:
    bootstrap-servers: kafka1:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    properties:
      spring.json.add.type.headers: false
    template:
      default-topic: resume-parse-topic
  data:
    mongodb:
      uri: mongodb://root:root@mongodb:27017/applicationdb?authSource=admin
          #mongodb://mongo:27017/applicationdb
eureka:
  client:
    service-url:
      defaultZone: http://eureka-server:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${random.value}
    metadata-map:
      instanceId: ${spring.application.name}:${random.value}

cloudinary:
  cloud-name: dutvipg4f
  api-key: 314876564298642
  api-secret: KAoHzfGUhCCjjdNKlNlb_cDDWcY

kafka:
  topics:
    resume-parse: resume-parse-topic

jwt:
  secret: mySuperqfqfqfqfqfqSecretKey1afaff23456dfffafqfqffqfqf

management:
  tracing:
    sampling:
      probability: 1.0
  endpoints:
    web:
      exposure:
        include: "*"

  health:
    livenessState:
      enabled: true
    readinessState:
      enabled: true

logging:
  pattern:
    level: "%5p [traceId=%X{traceId} spanId=%X{spanId}] %m%n"