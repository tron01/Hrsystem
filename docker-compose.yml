
services:

  kafka1:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_KRAFT_CLUSTER_ID=14bfe6cb-e7e3-4bce-a5b4-1d5ee555c2a2
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka1:9093,2@kafka2:9193
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka1:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=2
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka1-data:/bitnami/kafka
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 10s
      retries: 5

  kafka2:
    image: bitnami/kafka:latest
    ports:
      - "9192:9092"
    environment:
      - KAFKA_KRAFT_CLUSTER_ID=14bfe6cb-e7e3-4bce-a5b4-1d5ee555c2a2
      - KAFKA_BROKER_ID=2
      - KAFKA_CFG_NODE_ID=2
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka1:9093,2@kafka2:9193
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9193
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka2:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=2
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka2-data:/bitnami/kafka
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 10s
      retries: 5

  mongo:
    image: mongo:6.0
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_DATABASE: applicationdb

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "9085:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=kraft-cluster
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka1:9092,kafka2:9192
    depends_on:
      - kafka1
      - kafka2

  eureka-server:
    build: ./eureka-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mongo

  spring-boot-admin:
    build: ./spring-boot-admin
    ports:
      - "9090:9090"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - eureka-server

  api-gateway:
    build: ./api-gateway
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - eureka-server

  job-posting-service:
    build: ./job-posting-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mongo
      - kafka1
      - kafka2
      - eureka-server

  auth-service:
    build: ./auth-service
    ports:
      - "8084:8084"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mongo
      - eureka-server

  application-submit-service:
    build: ./application-submit-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mongo
      - kafka1
      - kafka2
      - eureka-server

  resume-parser-service:
    build: ./resume-parser-service
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mongo
      - kafka1
      - kafka2
      - eureka-server

volumes:
  kafka1-data:
  kafka2-data:
